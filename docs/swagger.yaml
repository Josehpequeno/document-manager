basePath: /
definitions:
  handlers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handlers.MessageResponse:
    properties:
      message:
        type: string
    type: object
  handlers.MessageWithUserResponse:
    properties:
      message:
        type: string
      user:
        $ref: '#/definitions/handlers.UserResponse'
    type: object
  handlers.UserBody:
    properties:
      email:
        type: string
      id:
        type: string
      master:
        type: boolean
      name:
        type: string
      password:
        type: string
    type: object
  handlers.UserBodyUpdate:
    properties:
      email:
        type: string
      master:
        type: boolean
      name:
        type: string
      password:
        type: string
    type: object
  handlers.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      master:
        type: boolean
      name:
        type: string
    type: object
  handlers.UsersResponse:
    properties:
      users:
        items:
          $ref: '#/definitions/handlers.UserResponse'
        type: array
    type: object
host: localhost:3450
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample api of documents manager
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Document manager API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: Get a greeting message
      operationId: get-greeting
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.MessageResponse'
      summary: Get a greeting message
      tags:
      - Misc
  /users:
    get:
      consumes:
      - application/json
      description: Get all users
      operationId: get-all-users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UsersResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - Bearer: []
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user
      operationId: create-user
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UserBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new user
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.MessageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a user by ID
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get a user by ID
      operationId: get-user-by-id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - Bearer: []
      summary: Get a user by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update a user by ID
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UserBodyUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.MessageWithUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a user by ID
      tags:
      - Users
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
